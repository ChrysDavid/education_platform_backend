# Generated by Django 5.2 on 2025-04-21 12:29

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssessmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='slug')),
                ('description', models.TextField(verbose_name='description')),
                ('max_score', models.PositiveIntegerField(default=100, verbose_name='score maximal')),
                ('passing_score', models.PositiveIntegerField(default=50, verbose_name='score de validation')),
                ('time_limit_minutes', models.PositiveIntegerField(blank=True, null=True, verbose_name='temps limite (minutes)')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mis à jour le')),
            ],
            options={
                'verbose_name': "type d'évaluation",
                'verbose_name_plural': "types d'évaluation",
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CareerField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='slug')),
                ('description', models.TextField(verbose_name='description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='icône')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
            ],
            options={
                'verbose_name': 'domaine professionnel',
                'verbose_name_plural': 'domaines professionnels',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='slug')),
                ('description', models.TextField(verbose_name='description')),
                ('level', models.CharField(choices=[('basic', 'Basique'), ('intermediate', 'Intermédiaire'), ('advanced', 'Avancé'), ('expert', 'Expert')], default='basic', max_length=20, verbose_name='niveau')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='icône')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
            ],
            options={
                'verbose_name': 'compétence',
                'verbose_name_plural': 'compétences',
                'ordering': ['category', 'level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SkillCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='icône')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='ordre')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
            ],
            options={
                'verbose_name': 'catégorie de compétence',
                'verbose_name_plural': 'catégories de compétence',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='identifiant unique')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('in_progress', 'En cours'), ('completed', 'Terminé'), ('expired', 'Expiré')], default='pending', max_length=20, verbose_name='statut')),
                ('score', models.PositiveIntegerField(blank=True, null=True, verbose_name='score')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='heure de début')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='heure de fin')),
                ('time_spent_seconds', models.PositiveIntegerField(blank=True, null=True, verbose_name='temps passé (secondes)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mis à jour le')),
                ('custom_parameters', models.JSONField(blank=True, default=dict, verbose_name='paramètres personnalisés')),
                ('results', models.JSONField(blank=True, default=dict, verbose_name='résultats')),
                ('advisor_notes', models.TextField(blank=True, verbose_name='notes du conseiller')),
                ('student_feedback', models.TextField(blank=True, verbose_name="commentaires de l'étudiant")),
                ('advisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='administered_assessments', to=settings.AUTH_USER_MODEL, verbose_name='conseiller')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to=settings.AUTH_USER_MODEL, verbose_name='étudiant')),
                ('assessment_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='orientation.assessmenttype', verbose_name="type d'évaluation")),
            ],
            options={
                'verbose_name': 'évaluation',
                'verbose_name_plural': 'évaluations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AssessmentQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='texte de la question')),
                ('question_type', models.CharField(choices=[('single_choice', 'Choix unique'), ('multiple_choice', 'Choix multiple'), ('text', 'Texte'), ('numeric', 'Numérique'), ('scale', 'Échelle')], max_length=20, verbose_name='type de question')),
                ('required', models.BooleanField(default=True, verbose_name='obligatoire')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='ordre')),
                ('points', models.PositiveIntegerField(default=1, verbose_name='points')),
                ('options', models.JSONField(blank=True, default=dict, help_text='Options pour les questions à choix', verbose_name='options')),
                ('scale_min', models.IntegerField(blank=True, null=True, verbose_name="minimum de l'échelle")),
                ('scale_max', models.IntegerField(blank=True, null=True, verbose_name="maximum de l'échelle")),
                ('scale_step', models.IntegerField(blank=True, default=1, null=True, verbose_name="pas de l'échelle")),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mis à jour le')),
                ('assessment_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='orientation.assessmenttype', verbose_name="type d'évaluation")),
            ],
            options={
                'verbose_name': "question d'évaluation",
                'verbose_name_plural': "questions d'évaluation",
                'ordering': ['assessment_type', 'order'],
            },
        ),
        migrations.CreateModel(
            name='CareerPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='slug')),
                ('description', models.TextField(verbose_name='description')),
                ('average_salary', models.CharField(blank=True, max_length=100, verbose_name='salaire moyen')),
                ('job_prospects', models.CharField(blank=True, max_length=100, verbose_name="perspectives d'emploi")),
                ('education_requirements', models.TextField(blank=True, verbose_name='prérequis éducatifs')),
                ('content', models.JSONField(blank=True, default=dict, verbose_name='contenu détaillé')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mis à jour le')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='career_paths', to='orientation.careerfield', verbose_name='domaine')),
                ('skills_required', models.ManyToManyField(related_name='career_paths', to='orientation.skill', verbose_name='compétences requises')),
            ],
            options={
                'verbose_name': 'filière professionnelle',
                'verbose_name_plural': 'filières professionnelles',
                'ordering': ['field', 'name'],
            },
        ),
        migrations.CreateModel(
            name='OrientationCareerPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compatibility_score', models.PositiveIntegerField(default=0, verbose_name='score de compatibilité')),
                ('recommendation_reason', models.TextField(blank=True, verbose_name='raison de la recommandation')),
                ('is_primary', models.BooleanField(default=False, verbose_name='recommandation principale')),
                ('career_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orientation.careerpath', verbose_name='filière professionnelle')),
            ],
            options={
                'verbose_name': 'filière recommandée',
                'verbose_name_plural': 'filières recommandées',
                'ordering': ['-compatibility_score'],
            },
        ),
        migrations.CreateModel(
            name='OrientationPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='titre')),
                ('description', models.TextField(verbose_name='description')),
                ('steps', models.JSONField(default=list, verbose_name='étapes')),
                ('resources', models.JSONField(default=list, verbose_name='ressources')),
                ('milestones', models.JSONField(default=list, verbose_name='jalons')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('proposed', 'Proposé'), ('in_progress', 'En cours'), ('completed', 'Terminé'), ('abandoned', 'Abandonné')], default='draft', max_length=20, verbose_name='statut')),
                ('progress', models.PositiveIntegerField(default=0, verbose_name='progression (%)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mis à jour le')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='date de début')),
                ('target_end_date', models.DateField(blank=True, null=True, verbose_name='date de fin prévue')),
                ('completed_date', models.DateField(blank=True, null=True, verbose_name='date de complétion')),
                ('student_feedback', models.TextField(blank=True, verbose_name="commentaires de l'étudiant")),
                ('advisor_notes', models.TextField(blank=True, verbose_name='notes du conseiller')),
                ('advisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_paths', to=settings.AUTH_USER_MODEL, verbose_name='conseiller')),
                ('assessments', models.ManyToManyField(related_name='orientation_paths', to='orientation.assessment', verbose_name='évaluations')),
                ('career_paths', models.ManyToManyField(related_name='orientation_paths', through='orientation.OrientationCareerPath', to='orientation.careerpath', verbose_name='filières recommandées')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orientation_paths', to=settings.AUTH_USER_MODEL, verbose_name='étudiant')),
            ],
            options={
                'verbose_name': "parcours d'orientation",
                'verbose_name_plural': "parcours d'orientation",
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='orientationcareerpath',
            name='orientation_path',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orientation.orientationpath', verbose_name="parcours d'orientation"),
        ),
        migrations.AddField(
            model_name='skill',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='orientation.skillcategory', verbose_name='catégorie'),
        ),
        migrations.CreateModel(
            name='AssessmentAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_data', models.JSONField(verbose_name='données de réponse')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mis à jour le')),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='orientation.assessment', verbose_name='évaluation')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='orientation.assessmentquestion', verbose_name='question')),
            ],
            options={
                'verbose_name': "réponse d'évaluation",
                'verbose_name_plural': "réponses d'évaluation",
                'unique_together': {('assessment', 'question')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='orientationcareerpath',
            unique_together={('orientation_path', 'career_path')},
        ),
        migrations.CreateModel(
            name='StudentSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency_level', models.PositiveSmallIntegerField(choices=[(1, 'Débutant'), (2, 'Élémentaire'), (3, 'Intermédiaire'), (4, 'Avancé'), (5, 'Expert')], default=1, verbose_name='niveau de maîtrise')),
                ('self_assessed', models.BooleanField(default=False, verbose_name='auto-évalué')),
                ('advisor_assessed', models.BooleanField(default=False, verbose_name='évalué par conseiller')),
                ('assessment_derived', models.BooleanField(default=False, verbose_name="dérivé d'évaluation")),
                ('evidence', models.TextField(blank=True, verbose_name='preuves')),
                ('last_practiced', models.DateField(blank=True, null=True, verbose_name='dernière pratique')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mis à jour le')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_skills', to='orientation.skill', verbose_name='compétence')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to=settings.AUTH_USER_MODEL, verbose_name='étudiant')),
            ],
            options={
                'verbose_name': "compétence d'étudiant",
                'verbose_name_plural': "compétences d'étudiant",
                'unique_together': {('student', 'skill')},
            },
        ),
    ]
