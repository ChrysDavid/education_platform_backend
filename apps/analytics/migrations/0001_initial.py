# Generated by Django 5.2 on 2025-04-21 12:29

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='titre')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('layout', models.JSONField(default=dict, verbose_name='disposition')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mis à jour le')),
                ('is_default', models.BooleanField(default=False, verbose_name='par défaut')),
                ('is_public', models.BooleanField(default=False, verbose_name='public')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboards', to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'verbose_name': 'tableau de bord',
                'verbose_name_plural': 'tableaux de bord',
                'ordering': ['-is_default', 'title'],
                'unique_together': {('user', 'title')},
            },
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='titre')),
                ('widget_type', models.CharField(choices=[('chart', 'Graphique'), ('counter', 'Compteur'), ('table', 'Tableau'), ('kpi', 'Indicateur de performance'), ('timeline', 'Chronologie'), ('map', 'Carte'), ('custom', 'Personnalisé')], max_length=20, verbose_name='type de widget')),
                ('chart_type', models.CharField(blank=True, choices=[('line', 'Ligne'), ('bar', 'Barres'), ('pie', 'Secteurs'), ('doughnut', 'Anneau'), ('radar', 'Radar'), ('scatter', 'Nuage de points'), ('area', 'Aires')], max_length=20, verbose_name='type de graphique')),
                ('config', models.JSONField(default=dict, verbose_name='configuration')),
                ('data_source', models.CharField(blank=True, max_length=255, verbose_name='source de données')),
                ('refresh_rate', models.PositiveIntegerField(default=0, verbose_name='taux de rafraîchissement (minutes)')),
                ('position_x', models.PositiveSmallIntegerField(default=0, verbose_name='position X')),
                ('position_y', models.PositiveSmallIntegerField(default=0, verbose_name='position Y')),
                ('width', models.PositiveSmallIntegerField(default=1, verbose_name='largeur')),
                ('height', models.PositiveSmallIntegerField(default=1, verbose_name='hauteur')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mis à jour le')),
                ('last_refreshed', models.DateTimeField(blank=True, null=True, verbose_name='dernier rafraîchissement')),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='widgets', to='analytics.dashboard', verbose_name='tableau de bord')),
            ],
            options={
                'verbose_name': 'widget',
                'verbose_name_plural': 'widgets',
                'ordering': ['dashboard', 'position_y', 'position_x'],
            },
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='nom')),
                ('display_name', models.CharField(max_length=255, verbose_name="nom d'affichage")),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('is_counter', models.BooleanField(default=False, verbose_name='est un compteur')),
                ('is_rate', models.BooleanField(default=False, verbose_name='est un taux')),
                ('is_gauge', models.BooleanField(default=False, verbose_name='est une jauge')),
                ('unit', models.CharField(blank=True, max_length=50, verbose_name='unité')),
                ('decimal_places', models.PositiveSmallIntegerField(default=0, verbose_name='décimales')),
                ('calculation_method', models.CharField(blank=True, max_length=255, verbose_name='méthode de calcul')),
                ('sql_query', models.TextField(blank=True, verbose_name='requête SQL')),
                ('python_function', models.CharField(blank=True, max_length=255, verbose_name='fonction Python')),
                ('threshold_warning', models.DecimalField(blank=True, decimal_places=5, max_digits=15, null=True, verbose_name="seuil d'avertissement")),
                ('threshold_critical', models.DecimalField(blank=True, decimal_places=5, max_digits=15, null=True, verbose_name='seuil critique')),
                ('available_intervals', models.JSONField(default=list, verbose_name='intervalles disponibles')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_public', models.BooleanField(default=False, verbose_name='publique')),
                ('is_realtime', models.BooleanField(default=False, verbose_name='temps réel')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créée le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mise à jour le')),
                ('denominator_metric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='denominator_for', to='analytics.metric', verbose_name='métrique dénominateur')),
                ('numerator_metric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='numerator_for', to='analytics.metric', verbose_name='métrique numérateur')),
            ],
            options={
                'verbose_name': 'métrique',
                'verbose_name_plural': 'métriques',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='titre')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('report_type', models.CharField(choices=[('user_activity', 'Activité utilisateur'), ('resource_usage', 'Utilisation des ressources'), ('appointment_stats', 'Statistiques des rendez-vous'), ('user_stats', 'Statistiques utilisateurs'), ('orientation_stats', "Statistiques d'orientation"), ('verification_stats', 'Statistiques de vérification'), ('custom', 'Personnalisé')], max_length=30, verbose_name='type de rapport')),
                ('report_format', models.CharField(choices=[('pdf', 'PDF'), ('xlsx', 'Excel'), ('csv', 'CSV'), ('json', 'JSON'), ('html', 'HTML')], max_length=10, verbose_name='format du rapport')),
                ('parameters', models.JSONField(blank=True, default=dict, verbose_name='paramètres')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('last_generated', models.DateTimeField(blank=True, null=True, verbose_name='dernière génération')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='date de début')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='date de fin')),
                ('file', models.FileField(blank=True, null=True, upload_to='reports/%Y/%m/', verbose_name='fichier')),
                ('is_scheduled', models.BooleanField(default=False, verbose_name='planifié')),
                ('schedule_frequency', models.CharField(blank=True, max_length=50, verbose_name='fréquence de planification')),
                ('next_run', models.DateTimeField(blank=True, null=True, verbose_name='prochaine exécution')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reports', to=settings.AUTH_USER_MODEL, verbose_name='créé par')),
            ],
            options={
                'verbose_name': 'rapport',
                'verbose_name_plural': 'rapports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=100, verbose_name="nom de l'événement")),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date et heure')),
                ('properties', models.JSONField(blank=True, default=dict, verbose_name='propriétés')),
                ('client_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP client')),
                ('user_agent', models.CharField(blank=True, max_length=512, verbose_name='user agent')),
                ('session_id', models.CharField(blank=True, max_length=100, verbose_name='ID de session')),
                ('campaign', models.CharField(blank=True, max_length=100, verbose_name='campagne')),
                ('source', models.CharField(blank=True, max_length=100, verbose_name='source')),
                ('medium', models.CharField(blank=True, max_length=100, verbose_name='medium')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analytics_events', to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'verbose_name': 'événement analytique',
                'verbose_name_plural': 'événements analytiques',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['event_name'], name='analytics_a_event_n_434138_idx'), models.Index(fields=['user'], name='analytics_a_user_id_3326ea_idx'), models.Index(fields=['timestamp'], name='analytics_a_timesta_aef2a5_idx')],
            },
        ),
        migrations.CreateModel(
            name='MetricValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(verbose_name='date et heure')),
                ('value', models.DecimalField(decimal_places=5, max_digits=15, verbose_name='valeur')),
                ('interval', models.CharField(default='day', max_length=20, verbose_name='intervalle')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='date de début')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='date de fin')),
                ('dimensions', models.JSONField(blank=True, default=dict, verbose_name='dimensions')),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='analytics.metric', verbose_name='métrique')),
            ],
            options={
                'verbose_name': 'valeur de métrique',
                'verbose_name_plural': 'valeurs de métrique',
                'ordering': ['metric', '-timestamp'],
                'indexes': [models.Index(fields=['metric', 'timestamp'], name='analytics_m_metric__7d9082_idx'), models.Index(fields=['metric', 'interval', 'timestamp'], name='analytics_m_metric__33247d_idx')],
                'unique_together': {('metric', 'timestamp', 'interval')},
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date et heure')),
                ('action_type', models.CharField(choices=[('login', 'Connexion'), ('logout', 'Déconnexion'), ('view', 'Consultation'), ('create', 'Création'), ('update', 'Mise à jour'), ('delete', 'Suppression'), ('search', 'Recherche'), ('download', 'Téléchargement'), ('upload', 'Téléversement'), ('other', 'Autre')], max_length=20, verbose_name="type d'action")),
                ('action_detail', models.CharField(blank=True, max_length=255, verbose_name="détail de l'action")),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='adresse IP')),
                ('user_agent', models.CharField(blank=True, max_length=512, verbose_name='user agent')),
                ('session_id', models.CharField(blank=True, max_length=40, verbose_name='identifiant de session')),
                ('data', models.JSONField(blank=True, default=dict, verbose_name='données')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='type de contenu')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'verbose_name': 'activité utilisateur',
                'verbose_name_plural': 'activités utilisateur',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'action_type'], name='analytics_u_user_id_dfe8b0_idx'), models.Index(fields=['timestamp'], name='analytics_u_timesta_2b8b17_idx'), models.Index(fields=['content_type', 'object_id'], name='analytics_u_content_d77385_idx')],
            },
        ),
    ]
