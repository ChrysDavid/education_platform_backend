# Generated by Django 5.2 on 2025-04-21 12:26

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='nom')),
                ('zip_code', models.CharField(blank=True, max_length=10, verbose_name='code postal')),
                ('region', models.CharField(blank=True, max_length=100, verbose_name='région')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='longitude')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='latitude')),
            ],
            options={
                'verbose_name': 'ville',
                'verbose_name_plural': 'villes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SchoolType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='nom')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='description')),
            ],
            options={
                'verbose_name': "type d'établissement",
                'verbose_name_plural': "types d'établissement",
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nom')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='slug')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='adresse')),
                ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='code postal')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('website', models.URLField(blank=True, verbose_name='site web')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='school_logos/', verbose_name='logo')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='school_covers/', verbose_name='image de couverture')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mis à jour le')),
                ('is_verified', models.BooleanField(default=False, verbose_name='vérifié')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='longitude')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='latitude')),
                ('founded_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='année de fondation')),
                ('accreditation', models.CharField(blank=True, max_length=255, verbose_name='accréditation')),
                ('student_count', models.PositiveIntegerField(blank=True, null=True, verbose_name="nombre d'élèves")),
                ('staff_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='nombre de personnel')),
                ('director_name', models.CharField(blank=True, max_length=255, verbose_name='nom du directeur')),
                ('admin_contact_name', models.CharField(blank=True, max_length=255, verbose_name='nom du contact administratif')),
                ('admin_contact_email', models.EmailField(blank=True, max_length=254, verbose_name='email du contact administratif')),
                ('admin_contact_phone', models.CharField(blank=True, max_length=20, verbose_name='téléphone du contact administratif')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schools', to='schools.city', verbose_name='ville')),
                ('school_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schools', to='schools.schooltype', verbose_name="type d'établissement")),
            ],
            options={
                'verbose_name': 'établissement',
                'verbose_name_plural': 'établissements',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nom')),
                ('facility_type', models.CharField(choices=[('library', 'Bibliothèque'), ('laboratory', 'Laboratoire'), ('sports', 'Installations sportives'), ('technology', 'Équipement technologique'), ('dormitory', 'Internat'), ('canteen', 'Cantine'), ('medical', 'Service médical'), ('other', 'Autre')], max_length=50, verbose_name="type d'équipement")),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='facility_images/', verbose_name='image')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='quantité')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facilities', to='schools.school', verbose_name='établissement')),
            ],
            options={
                'verbose_name': 'équipement',
                'verbose_name_plural': 'équipements',
                'ordering': ['school', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nom')),
                ('slug', models.SlugField(max_length=255, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('head_name', models.CharField(blank=True, max_length=255, verbose_name='nom du responsable')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='schools.school', verbose_name='établissement')),
            ],
            options={
                'verbose_name': 'département',
                'verbose_name_plural': 'départements',
                'ordering': ['school', 'name'],
                'unique_together': {('school', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='SchoolContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_type', models.CharField(choices=[('general', 'Contact général'), ('admissions', 'Admissions'), ('academic', 'Services académiques'), ('administration', 'Administration'), ('technical', 'Support technique'), ('other', 'Autre')], max_length=50, verbose_name='type de contact')),
                ('name', models.CharField(max_length=255, verbose_name='nom')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='titre')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='schools.school', verbose_name='établissement')),
            ],
            options={
                'verbose_name': "contact d'établissement",
                'verbose_name_plural': "contacts d'établissement",
                'ordering': ['school', 'contact_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SchoolEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='titre')),
                ('description', models.TextField(verbose_name='description')),
                ('start_date', models.DateTimeField(verbose_name='date de début')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='date de fin')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='lieu')),
                ('contact_email', models.EmailField(blank=True, max_length=254, verbose_name='email de contact')),
                ('contact_phone', models.CharField(blank=True, max_length=20, verbose_name='téléphone de contact')),
                ('image', models.ImageField(blank=True, null=True, upload_to='school_events/', verbose_name='image')),
                ('registration_url', models.URLField(blank=True, verbose_name="lien d'inscription")),
                ('is_public', models.BooleanField(default=True, verbose_name='public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mis à jour le')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='schools.school', verbose_name='établissement')),
            ],
            options={
                'verbose_name': 'événement',
                'verbose_name_plural': 'événements',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='SchoolMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='titre')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('media_type', models.CharField(choices=[('photo', 'Photo'), ('video', 'Vidéo'), ('document', 'Document')], max_length=20, verbose_name='type de média')),
                ('file', models.FileField(upload_to='school_media/', verbose_name='fichier')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='school_media/thumbnails/', verbose_name='vignette')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('is_public', models.BooleanField(default=True, verbose_name='public')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='schools.school', verbose_name='établissement')),
            ],
            options={
                'verbose_name': "média d'établissement",
                'verbose_name_plural': "médias d'établissement",
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nom')),
                ('slug', models.SlugField(max_length=255, verbose_name='slug')),
                ('code', models.CharField(blank=True, max_length=50, verbose_name='code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('duration', models.CharField(blank=True, max_length=100, verbose_name='durée')),
                ('level', models.CharField(blank=True, max_length=100, verbose_name='niveau')),
                ('degree_awarded', models.CharField(blank=True, max_length=255, verbose_name='diplôme délivré')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('admission_requirements', models.TextField(blank=True, verbose_name="conditions d'admission")),
                ('career_opportunities', models.TextField(blank=True, verbose_name='débouchés professionnels')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mis à jour le')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='programs', to='schools.department', verbose_name='département')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programs', to='schools.school', verbose_name='établissement')),
            ],
            options={
                'verbose_name': 'programme',
                'verbose_name_plural': 'programmes',
                'ordering': ['school', 'name'],
                'unique_together': {('school', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='SchoolReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='note')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='titre')),
                ('comment', models.TextField(blank=True, verbose_name='commentaire')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mis à jour le')),
                ('is_verified', models.BooleanField(default=False, verbose_name='vérifié')),
                ('is_public', models.BooleanField(default=True, verbose_name='public')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='schools.school', verbose_name='établissement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_reviews', to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'verbose_name': "évaluation d'établissement",
                'verbose_name_plural': "évaluations d'établissement",
                'ordering': ['-created_at'],
                'unique_together': {('school', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='school',
            index=models.Index(fields=['name'], name='schools_sch_name_5d0cfd_idx'),
        ),
        migrations.AddIndex(
            model_name='school',
            index=models.Index(fields=['city'], name='schools_sch_city_id_b5d032_idx'),
        ),
        migrations.AddIndex(
            model_name='school',
            index=models.Index(fields=['school_type'], name='schools_sch_school__de5c49_idx'),
        ),
        migrations.AddIndex(
            model_name='school',
            index=models.Index(fields=['is_verified'], name='schools_sch_is_veri_f5acd2_idx'),
        ),
    ]
