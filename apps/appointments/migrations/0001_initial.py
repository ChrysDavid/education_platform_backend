# Generated by Django 5.2 on 2025-04-21 12:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='titre')),
                ('schedule_time', models.DateTimeField(verbose_name='date et heure prévues')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='heure de fin')),
                ('duration_minutes', models.PositiveIntegerField(default=30, verbose_name='durée (minutes)')),
                ('purpose', models.TextField(blank=True, verbose_name='objectif')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='lieu')),
                ('meeting_type', models.CharField(choices=[('in_person', 'En personne'), ('video', 'Vidéoconférence'), ('phone', 'Téléphone'), ('chat', 'Chat textuel')], default='in_person', max_length=20, verbose_name='type de rencontre')),
                ('meeting_link', models.URLField(blank=True, null=True, verbose_name='lien de la réunion')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('confirmed', 'Confirmé'), ('rescheduled', 'Reporté'), ('cancelled', 'Annulé'), ('completed', 'Terminé'), ('no_show', 'Absence')], default='pending', max_length=20, verbose_name='statut')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mis à jour le')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('requester_feedback', models.TextField(blank=True, verbose_name='feedback du demandeur')),
                ('recipient_feedback', models.TextField(blank=True, verbose_name='feedback du destinataire')),
                ('reminder_sent', models.BooleanField(default=False, verbose_name='rappel envoyé')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_appointments', to=settings.AUTH_USER_MODEL, verbose_name='destinataire')),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_appointments', to=settings.AUTH_USER_MODEL, verbose_name='demandeur')),
            ],
            options={
                'verbose_name': 'rendez-vous',
                'verbose_name_plural': 'rendez-vous',
                'ordering': ['-schedule_time'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentException',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='date')),
                ('reason', models.CharField(max_length=255, verbose_name='raison')),
                ('is_all_day', models.BooleanField(default=True, verbose_name='toute la journée')),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='heure de début')),
                ('end_time', models.TimeField(blank=True, null=True, verbose_name='heure de fin')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_exceptions', to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'verbose_name': 'exception de rendez-vous',
                'verbose_name_plural': 'exceptions de rendez-vous',
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('email', 'Email'), ('push', 'Notification push'), ('sms', 'SMS'), ('all', 'Tous')], default='email', max_length=10, verbose_name='type de rappel')),
                ('minutes_before', models.PositiveIntegerField(default=60, verbose_name='minutes avant')),
                ('sent', models.BooleanField(default=False, verbose_name='envoyé')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='envoyé le')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='appointments.appointment', verbose_name='rendez-vous')),
            ],
            options={
                'verbose_name': 'rappel de rendez-vous',
                'verbose_name_plural': 'rappels de rendez-vous',
                'ordering': ['appointment', 'minutes_before'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.PositiveSmallIntegerField(choices=[(0, 'Lundi'), (1, 'Mardi'), (2, 'Mercredi'), (3, 'Jeudi'), (4, 'Vendredi'), (5, 'Samedi'), (6, 'Dimanche')], verbose_name='jour de la semaine')),
                ('start_time', models.TimeField(verbose_name='heure de début')),
                ('end_time', models.TimeField(verbose_name='heure de fin')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='lieu')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('recurring', models.BooleanField(default=True, verbose_name='récurrent')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='date de début')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='date de fin')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='mis à jour le')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_slots', to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'verbose_name': 'créneau de rendez-vous',
                'verbose_name_plural': 'créneaux de rendez-vous',
                'ordering': ['day_of_week', 'start_time', 'end_time'],
            },
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['requester', 'status'], name='appointment_request_04d313_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['recipient', 'status'], name='appointment_recipie_109077_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['schedule_time'], name='appointment_schedul_883a62_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['status'], name='appointment_status_8fe9d7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='appointmentexception',
            unique_together={('user', 'date', 'start_time', 'end_time')},
        ),
        migrations.AlterUniqueTogether(
            name='appointmentreminder',
            unique_together={('appointment', 'reminder_type', 'minutes_before')},
        ),
        migrations.AlterUniqueTogether(
            name='appointmentslot',
            unique_together={('user', 'day_of_week', 'start_time', 'end_time')},
        ),
    ]
